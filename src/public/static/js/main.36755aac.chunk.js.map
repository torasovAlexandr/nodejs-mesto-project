{"version":3,"sources":["images/birds.svg","images/404.svg","components/Friends.js","components/Friend.js","components/Dashboard.js","components/PageNotFound.js","components/Form.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Friends","path","useRouteMatch","useState","friends","setFriends","isFetched","setFetched","useEffect","axios","get","then","res","data","className","map","friend","key","_id","to","src","profilePic","alt","name","Friend","id","useParams","history","useHistory","setIsFetched","setFriend","location","parrotsOwned","length","favBirdQuote","onClick","goBack","Dashboard","Birds","PageNotFound","Bye","Form","picture","tempValue","toy","form","setForm","onChange","event","newForm","target","value","includes","slice","type","defaultChecked","elem","index","parrot","favoriteToys","split","push","rest","post","App","exact","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.36755aac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/birds.947bf8a9.svg\";","module.exports = __webpack_public_path__ + \"static/media/404.200fa0f2.svg\";","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useRouteMatch, Link } from 'react-router-dom';\n\nimport './Friends.css';\n\nfunction Friends() {\n  const { path } = useRouteMatch();\n  const [friends, setFriends] = useState([]);\n  const [isFetched, setFetched] = useState(false);\n\n  useEffect(() => {\n    if (isFetched) return;\n    axios.get('/users')\n      .then(res => {\n        setFriends(res.data);\n      })\n    setFetched(true);\n  },[friends, isFetched, setFetched, setFriends])\n\n  return (\n      <div className=\"friends\">\n        <ul className=\"friends__list\">\n        {\n          friends.map((friend) => {\n            return (\n              <li className=\"friend-preview\" key={friend._id} >\n                <Link to={`${path}/${friend._id}`}>\n                    <img className=\"friend-preview__image\" src={friend.profilePic} alt=\"\"/>\n                    <span className=\"friend-preview__name\">{friend.name}</span>\n                </Link>\n              </li>\n            )\n          })\n        }\n        </ul>\n      </div>\n  );\n}\n\nexport default Friends;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport './Friend.css';\n\nfunction Friend() {\n  const { id } = useParams();\n  const history = useHistory();\n  const [isFetched, setIsFetched] = useState(false);\n  const [friend, setFriend] = useState({});\n\n  useEffect(()=> {\n    if (isFetched) return;\n    axios.get(`/users/${id}`)\n      .then(res => {\n        setFriend(res.data)\n      })\n    setIsFetched(true)\n  },[isFetched, friend, setIsFetched, setFriend])\n\n  return (\n      <div className=\"friend\">\n        <div className=\"friend__card\">\n          <img className=\"friend__userpic\" src={friend.profilePic} alt={friend.name}/>\n          <div className=\"friend__details\">\n            <h3 className=\"friend__name\">{friend.name}</h3>\n            <p className=\"friend__location\">Местоположение: {friend.location}</p>\n            <p className=\"friend__quantity\">Количество домашних попугаев: {friend.parrotsOwned && friend.parrotsOwned.length}</p>\n            <p className=\"friend__fav-quote\">Любимое высказывание о птицах: \"{friend.favBirdQuote}\"</p>\n          </div>\n        </div>\n        <button className=\"button button_type_back\" onClick={() => history.goBack()} />\n      </div>\n  );\n}\n\nexport default Friend;\n\n\n","import React from 'react';\nimport './Dashboard.css';\nimport Birds from '../images/birds.svg';\n\nfunction Dashboard() {\n  \n  return (\n      <div className=\"dashboard\">\n        <img src={Birds} alt=\"\"/>\n      </div>\n  );\n}\n\nexport default Dashboard;\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './PageNotFound.css';\nimport Bye from '../images/404.svg';\n\nfunction PageNotFound () {\n  return (\n    <div className=\"not-found\">\n      <h3 className=\"not-found__title\">\n       <span>404</span> - Страница не найдена\n      </h3>\n      <img className=\"not-found__image\" src={Bye} alt=\"\"/>\n      <p className=\"not-found__text\">\n       Ой, здесь ничего нет\n      </p>\n      <Link className=\"button button_type_to-main\" to=\"/\">Назад</Link>\n    </div>\n  )\n}\n\nexport default PageNotFound;","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\nimport './Form.css';\n\nconst PET_PREFIX = 'parrot_';\n\nfunction Form() {\n  const [form, setForm] = useState({ picture: 'mary', parrotsOwned: [], tempValue: { name: '', toy: '' } });\n  const history = useHistory();\n\n  const handleInputChange = (event) => {\n    const newForm = {...form};\n    const { name, value } = event.target;\n\n    if (name.includes(PET_PREFIX)) {\n      newForm.tempValue[name.slice(PET_PREFIX.length)] = value;\n    } else {\n      newForm[name] = value;\n    }\n    setForm(newForm);\n  };\n\n  const handleAddParrot = () => {\n    const newForm = {...form};\n\n    const parrot = {\n      name: form.tempValue.name,\n      favoriteToys: form.tempValue.toy.split(',')\n    };\n\n    newForm.parrotsOwned.push(parrot);\n    newForm.tempValue = { name: '', toy: '' };\n    setForm(newForm);\n  };\n\n  const handleFormSave = () => {\n    const { picture, tempValue, ...rest } = form;\n    const data = {\n      ...rest,\n      profilePic: `/profile-images/${picture}-dark.png`,\n    }\n    axios.post('/users', data)\n      .then(res => {\n        history.push('/friends');\n      });\n  };\n\n  return (\n    <form className=\"form\" onChange={handleInputChange}>\n      <label className=\"form__label\">\n        Имя друга\n        <input type=\"text\" name=\"name\" className=\"form__input\" />\n      </label>\n      <label className=\"form__label\">\n        Местоположение\n        <input type=\"text\" name=\"location\" className=\"form__input\" />\n      </label>\n      <label className=\"form__label\">\n        Любимая цитата про попугов\n        <input type=\"text\" name=\"favBirdQuote\" className=\"form__input\" />\n      </label>\n      <label className=\"form__label\">\n        Картинка 1\n        <input type=\"radio\" defaultChecked name=\"picture\" value=\"mary\" className=\"form__input\" />\n      </label>\n      <label className=\"form__label\">\n        Картинка 2\n        <input type=\"radio\" name=\"picture\" value=\"bill\" className=\"form__input\" />\n      </label>\n      <hr className=\"form__divider\"/>\n      <ul>\n        {form.parrotsOwned.map((elem, index) => {\n          return <li key={elem.name + index}>{elem.name}</li>\n        })}\n      </ul>\n      <label className=\"form__label\">\n        Имя попугая\n        <input value={form.tempValue.name} type=\"text\" name=\"parrot_name\" className=\"form__input\" />\n      </label>\n      <label className=\"form__label\">\n        Список любимых игрушек через запятую\n        <input value={form.tempValue.toy} type=\"text\" name=\"parrot_toy\" className=\"form__input\" />\n      </label>\n      <label className=\"form__label\">\n        Добавить попугая\n        <button name=\"parrot_add\" type=\"button\" onClick={handleAddParrot}>+</button>\n      </label>\n      <hr className=\"form__divider\" />\n      <label className=\"form__label\">\n        Сохранить форму на сервер!\n        <button type=\"button\" onClick={handleFormSave}>Сохранить</button>\n      </label>\n    </form>\n  );\n}\n\nexport default Form;\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, NavLink, Route, Switch } from 'react-router-dom';\nimport Friends from './Friends';\nimport Friend from './Friend';\nimport Dashboard from './Dashboard';\nimport PageNotFound from './PageNotFound';\nimport Form from './Form';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className='App'>\n        <header className=\"header\">\n          <NavLink to='/' className=\"header__logo\">Parrot Friendship Society</NavLink>\n          <nav className=\"menu\">\n            <ul className=\"menu__list\">\n              <li className=\"menu__list-item\"><NavLink className=\"menu__link\" to='/friends'>Друзья</NavLink></li>\n              <li className=\"menu__list-item\"><NavLink className=\"menu__link\" to='/create'>Новый друг</NavLink></li>\n            </ul>\n          </nav>\n        </header>\n        <Switch>\n          <Route exact path={['/', '/index.html']}>\n            <Dashboard />\n          </Route>\n          <Route exact path='/friends'>\n            <Friends />\n          </Route>\n          <Route path='/friends/:id'>\n            <Friend />\n          </Route>\n          <Route path='/create'>\n            <Form />\n          </Route>\n          <Route path='*'>\n            <PageNotFound />\n          </Route>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}